name: CI - Dev_Bank

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-build:
    name: Backend - Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven (skip tests)
        working-directory: backend
        run: mvn clean package -DskipTests -Dspotless.check.skip=true -Dspotless.apply.skip=true -Dspotbugs.skip=true -Dpmd.skip=true -Djacoco.skip=true

      - name: Cache built JAR
        uses: actions/cache@v4
        with:
          path: backend/target/*.jar
          key: backend-jar-${{ hashFiles('backend/pom.xml') }}

  backend-quality-checks:
    name: Backend - Quality Checks (Spotless + PMD)
    runs-on: ubuntu-latest
    needs: backend-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache built JAR
        uses: actions/cache@v4
        with:
          path: backend/target/*.jar
          key: backend-jar-${{ hashFiles('backend/pom.xml') }}

      - name: Run Spotless Check
        working-directory: backend
        run: mvn spotless:check

      - name: Run PMD Check
        working-directory: backend
        run: mvn pmd:check

  backend-test:
    name: Backend - Tests
    runs-on: ubuntu-latest
    needs: backend-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache built JAR
        uses: actions/cache@v4
        with:
          path: backend/target/*.jar
          key: backend-jar-${{ hashFiles('backend/pom.xml') }}

      - name: Run Tests
        working-directory: backend
        run: mvn test

  frontend-build:
    name: Frontend - Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@9.1.0

      - name: Install dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Build frontend
        working-directory: frontend
        run: pnpm run build

  frontend-lint:
    name: Frontend - Lint
    runs-on: ubuntu-latest
    needs: frontend-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm@9.1.0

      - name: Install dependencies
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Run linter
        working-directory: frontend
        run: pnpm run lint

  docker-compose-build:
    name: Docker - Build Only
    runs-on: ubuntu-latest
    needs: [backend-test, backend-quality-checks, frontend-build, frontend-lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Compose Build
        run: docker compose build

